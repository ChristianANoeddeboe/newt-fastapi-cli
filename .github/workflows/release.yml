name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
      release_notes:
        description: "Release notes (optional)"
        required: false
        default: ""

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install UV
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Test CLI functionality
        run: |
          uv run newt --help
          uv run newt -v

      - name: Get current version
        id: current_version
        run: |
          CURRENT=$(uv version --short)
          echo "current=$CURRENT" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          uv version --bump ${{ github.event.inputs.version_bump }}
          NEW_VERSION=$(uv version --short)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumped version from ${{ steps.current_version.outputs.current }} to $NEW_VERSION"

      - name: Build and test package
        run: |
          uv build
          uv run newt -v

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          title: "ðŸš€ Release v${{ steps.bump_version.outputs.new_version }}"
          body: |
            ## Release v${{ steps.bump_version.outputs.new_version }}

            This PR prepares a new release by bumping the version from `${{ steps.current_version.outputs.current }}` to `${{ steps.bump_version.outputs.new_version }}`.

            ### Changes
            - Version bump (${{ github.event.inputs.version_bump }}): `${{ steps.current_version.outputs.current }}` â†’ `${{ steps.bump_version.outputs.new_version }}`
            - Package builds successfully
            - CLI functionality tested

            ### Release Notes
            ${{ github.event.inputs.release_notes || 'No additional release notes provided.' }}

            ### Next Steps
            1. Review and merge this PR
            2. Create a release from the tag `v${{ steps.bump_version.outputs.new_version }}`
            3. The build workflow will automatically attach assets to the release

            ---
            *This PR was automatically created by the Release workflow.*
          branch: release/v${{ steps.bump_version.outputs.new_version }}
          delete-branch: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-v${{ steps.bump_version.outputs.new_version }}
          path: dist/
